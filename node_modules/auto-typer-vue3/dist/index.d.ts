import type { AllowedComponentProps } from 'vue';
import type { ComponentCustomProps } from 'vue';
import type { ComponentOptionsMixin } from 'vue';
import type { DefineComponent } from 'vue';
import type { ExtractPropTypes } from 'vue';
import type { Plugin as Plugin_2 } from 'vue';
import type { VNodeProps } from 'vue';

export declare const AutoTyperVue: DefineComponent<{
    componentTag: {
        type: StringConstructor;
        default: string;
        validator(value: unknown): boolean;
    };
    beginningWord: {
        type: StringConstructor;
        default: string;
    };
    writtenBeginningWord: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: (StringConstructor | ArrayConstructor)[];
        required: true;
        validator(value: unknown): any;
    };
    startDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    betweenWordDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    typingDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    deletingDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    waitBeforeDeleteDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    startByDefault: {
        type: BooleanConstructor;
        default: boolean;
    };
    repeat: {
        type: BooleanConstructor;
        default: boolean;
    };
    removeAfterRepeat: {
        type: BooleanConstructor;
        default: boolean;
    };
}, any, {
    currentText: string;
    typedBeginningWord: string;
    textFeed: never[];
}, {}, {
    /**
     * Start the auto typing
     */
    begin(): Promise<void>;
    /**
     * Write the beginning word, if one is provided
     */
    writeBeginningWord(): Promise<void>;
    /**
     * Auto type the text
     */
    autoType(): Promise<void>;
    /**
     * Write a word on the screen
     * @param {string} currentWord
     */
    writeWord(currentWord: string): Promise<void>;
    /**
     * Remove a word from the screen
     * @param {string} currentWord
     */
    removeWord(currentWord: string): Promise<void>;
}, ComponentOptionsMixin, ComponentOptionsMixin, "finished"[], "finished", VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    componentTag: {
        type: StringConstructor;
        default: string;
        validator(value: unknown): boolean;
    };
    beginningWord: {
        type: StringConstructor;
        default: string;
    };
    writtenBeginningWord: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: (StringConstructor | ArrayConstructor)[];
        required: true;
        validator(value: unknown): any;
    };
    startDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    betweenWordDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    typingDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    deletingDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    waitBeforeDeleteDelay: {
        type: NumberConstructor;
        default: number;
        validator(value: unknown): boolean;
    };
    startByDefault: {
        type: BooleanConstructor;
        default: boolean;
    };
    repeat: {
        type: BooleanConstructor;
        default: boolean;
    };
    removeAfterRepeat: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    onFinished?: ((...args: any[]) => any) | undefined;
}, {
    componentTag: string;
    beginningWord: string;
    writtenBeginningWord: string;
    startDelay: number;
    betweenWordDelay: number;
    typingDelay: number;
    deletingDelay: number;
    waitBeforeDeleteDelay: number;
    startByDefault: boolean;
    repeat: boolean;
    removeAfterRepeat: boolean;
}, {}>;

declare function InstallPlugin(): Plugin_2;
export default InstallPlugin;

export declare interface VueAutoTyper {
    componentTag?: String;
    customCursorStyling?: Object;
    beginningWord?: String;
    text: String | Array<String>;
    startDelay?: Number;
    betweenWordDelay?: Number;
    typingDelay?: Number;
    deletingDelay?: Number;
    waitBeforeDeleteDelay?: Number;
    startByDefault?: Boolean;
    repeat?: Boolean;
}

export { }
